/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UserInterface.StoreAdminUI;

import Business.ConfigureOrganization;
import Business.Stores.StoresDirectory;
import com.mysql.cj.jdbc.result.ResultSetMetaData;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import java.sql.SQLException;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author maddukurimonikabhaskar
 */
public class AddStore extends javax.swing.JPanel {

    /**
     * Creates new form AddStore
     */
    String OrgName;
    public AddStore() {
        initComponents();
    }
    public AddStore(String OrganizationName){
        initComponents();
        lblOrg.setText(OrganizationName);
        this.OrgName = OrganizationName;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtStoreID = new javax.swing.JTextField();
        txtStoreName = new javax.swing.JTextField();
        txtStoreAddress = new javax.swing.JTextField();
        btnRefresh = new javax.swing.JButton();
        btnCreate = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblStoresList = new javax.swing.JTable();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        lblOrg = new javax.swing.JLabel();

        jLabel1.setText("Store ID:");

        jLabel2.setText("Store Name:");

        jLabel3.setText("Store Address:");

        txtStoreID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtStoreIDActionPerformed(evt);
            }
        });

        btnRefresh.setText("Refresh");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });

        btnCreate.setText("Create ");
        btnCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateActionPerformed(evt);
            }
        });

        tblStoresList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Store ID", "Store Name", "Store Address"
            }
        ));
        jScrollPane1.setViewportView(tblStoresList);

        btnUpdate.setText("Update Details");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete ");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        jLabel4.setText("Organization:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(194, 194, 194)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtStoreID)
                            .addComponent(txtStoreName)
                            .addComponent(txtStoreAddress, javax.swing.GroupLayout.DEFAULT_SIZE, 169, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(93, 93, 93)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(396, 396, 396)
                                .addComponent(btnRefresh))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 495, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(68, 68, 68)
                                .addComponent(btnUpdate)
                                .addGap(101, 101, 101)
                                .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(209, 209, 209)
                                .addComponent(btnCreate))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblOrg)))
                .addContainerGap(112, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(lblOrg))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtStoreID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtStoreName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtStoreAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCreate)
                    .addComponent(btnRefresh))
                .addGap(28, 28, 28)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUpdate)
                    .addComponent(btnDelete))
                .addContainerGap(227, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtStoreIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtStoreIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtStoreIDActionPerformed

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed

        try {
            // TODO add your handling code here:
            populateStoresListTable();
        } catch (SQLException ex) {
            java.util.logging.Logger.getLogger(AddStore.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btnRefreshActionPerformed

    private void btnCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateActionPerformed
        try {
            // TODO add your handling code here:
            int StoreID = Integer.parseInt(txtStoreID.getText());
            String StoreName = OrgName+"_"+txtStoreName.getText();
            String StoreAddress = txtStoreAddress.getText();
            

            ResultSet rs1 = StoresDirectory.CheckSpecificTableforData(OrgName, StoreID);
            if(rs1.next()){
                JOptionPane.showMessageDialog(this, "StoreID Already Exists");
            }
            else{
                StoresDirectory.CreateDatainSpecificOrganizationTable(OrgName, StoreID, StoreName, StoreAddress);
                
                
                JOptionPane.showMessageDialog(this, "Store Created");
                

            }
        } catch (SQLException ex) {
            java.util.logging.Logger.getLogger(AddStore.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btnCreateActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        int UpdateStoreID = Integer.parseInt(txtStoreID.getText());
        String UpdateStoreName = OrgName+"_"+txtStoreName.getText();
        String UpdateStoreAddress = txtStoreAddress.getText();
        int selectRow = tblStoresList.getSelectedRow();
        if(selectRow>=0){
            int StoreID = (int) tblStoresList.getValueAt(selectRow, 0);
            int selectionButton = JOptionPane.YES_NO_OPTION;
            int selectionResult = JOptionPane.showConfirmDialog(null, "Confirm Update?","Warning",selectionButton);
            if(selectionResult == JOptionPane.YES_OPTION){

                try {
                    StoresDirectory.UpdateDatainSpecificTable(OrgName, UpdateStoreID, UpdateStoreName, UpdateStoreAddress, StoreID);
                } catch (SQLException ex) {
                    java.util.logging.Logger.getLogger(AddStore.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
                }
                

            }

        }
        else{
            JOptionPane.showMessageDialog(null,"Please select a row to update");
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        int selectRow = tblStoresList.getSelectedRow();
        if(selectRow>=0){
            int Store_ID = (int) tblStoresList.getValueAt(selectRow, 0);
            int selectionButton = JOptionPane.YES_NO_OPTION;
            int selectionResult = JOptionPane.showConfirmDialog(null, "Confirm Delete?","Warning",selectionButton);
            if(selectionResult == JOptionPane.YES_OPTION){

                try {
                    StoresDirectory.DeleteDatafromSpecificTable(OrgName, Store_ID);
                } catch (SQLException ex) {
                    java.util.logging.Logger.getLogger(AddStore.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
                }
                

            }

        }
        else{
            JOptionPane.showMessageDialog(null,"Please select a row to delete");
        }
    }//GEN-LAST:event_btnDeleteActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCreate;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblOrg;
    private javax.swing.JTable tblStoresList;
    private javax.swing.JTextField txtStoreAddress;
    private javax.swing.JTextField txtStoreID;
    private javax.swing.JTextField txtStoreName;
    // End of variables declaration//GEN-END:variables

    private void populateStoresListTable() throws SQLException {
       DefaultTableModel StoresListTable = (DefaultTableModel) tblStoresList.getModel();
        ResultSet rs1 = StoresDirectory.GetAllDataFromSpecificTable(OrgName);
        ResultSetMetaData metaData = (ResultSetMetaData) rs1.getMetaData();
        int columnCount = metaData.getColumnCount();
        StoresListTable.setRowCount(0);
        
        Object[] row = new Object[columnCount];
        while (rs1.next()){
            //Get object from column with specific index of result set to array of objects
            for (int i = 0; i < columnCount; i++){
                row[i] = rs1.getObject(i+1);
            }
            //Now add row to table model with that array of objects as an argument
            StoresListTable.addRow(row);
        }
    }
}
