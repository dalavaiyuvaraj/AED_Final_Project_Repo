/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UserInterface.StoreAdminUI;

import Business.Customer.Customer;
import Business.DeliveryMan.DeliveryMan;
import Business.Order.Order;
import Business.Stores.Products;
import Database.mysqlConnection;
import com.mysql.cj.jdbc.result.ResultSetMetaData;
import java.lang.System.Logger;
import java.lang.System.Logger.Level;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import Database.mysqlConnection;
import java.sql.Connection;
import java.util.ArrayList;
import java.sql.PreparedStatement;
import javax.swing.JOptionPane;
import java.sql.ResultSet;
import java.sql.SQLException;

/**
 *
 * @author ASUS
 */
public class ViewOrders extends javax.swing.JPanel {

    /**
     * Creates new form ViewOrders
     */
    String Organization;
    public ViewOrders() {
        initComponents();
    }
    public ViewOrders(String Organization) {
        initComponents();
        this.Organization = Organization+"_orders";;
        lblOrganization.setText(Organization);
        
        
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnFind = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblOrdersList = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        lblOrganization = new javax.swing.JLabel();
        cbxChangeStatus = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        btnUpdateStatus = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        cbxDA = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        btnRefresh = new javax.swing.JButton();

        btnFind.setText("Find All Orders");
        btnFind.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFindActionPerformed(evt);
            }
        });

        tblOrdersList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Order ID", "Store Name", "Product Name", "Product Price", "Order Status", "Customer Email", "Customer Location"
            }
        ));
        jScrollPane1.setViewportView(tblOrdersList);

        jLabel1.setText("Organization:");

        cbxChangeStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Product Shipped", "Delivered" }));

        jLabel2.setText("Change Status:");

        btnUpdateStatus.setText("Update");
        btnUpdateStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateStatusActionPerformed(evt);
            }
        });

        jLabel3.setText("Assign Order:");

        cbxDA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxDAActionPerformed(evt);
            }
        });

        jButton1.setText("Assign");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        btnRefresh.setText("Refresh");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(88, 88, 88)
                                .addComponent(btnFind))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(61, 61, 61)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblOrganization))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(62, 62, 62)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3))
                                .addGap(39, 39, 39)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(cbxChangeStatus, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cbxDA, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnUpdateStatus)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jButton1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnRefresh)))))
                        .addGap(0, 225, Short.MAX_VALUE))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(lblOrganization))
                .addGap(54, 54, 54)
                .addComponent(btnFind)
                .addGap(28, 28, 28)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbxChangeStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(btnUpdateStatus))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(cbxDA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1)
                    .addComponent(btnRefresh))
                .addContainerGap(263, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnFindActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFindActionPerformed
        try {
            // TODO add your handling code here:

            PopulateOrdersList();
        } catch (SQLException ex) {
            java.util.logging.Logger.getLogger(ViewOrders.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btnFindActionPerformed

    private void btnUpdateStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateStatusActionPerformed
        // TODO add your handling code here:
        int SelectRow = tblOrdersList.getSelectedRow();
        if(SelectRow>=0){
            String ChangeStatus = (String) cbxChangeStatus.getSelectedItem();
            int OrderID = (int) tblOrdersList.getValueAt(SelectRow, 0);
            try {
                Order.UpdateOrderStatusinTable(Organization, ChangeStatus, OrderID);
                JOptionPane.showMessageDialog(this, "Order Status Updated");
                PopulateOrdersList();
            } catch (SQLException ex) {
                java.util.logging.Logger.getLogger(ViewOrders.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            }
            
            
        }
        else{
            JOptionPane.showMessageDialog(this, "Please Select a Row to Update");
        }
        
        
    }//GEN-LAST:event_btnUpdateStatusActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        int SelectRow = tblOrdersList.getSelectedRow();
        if(SelectRow>=0){
            int OrderID = (int) tblOrdersList.getValueAt(SelectRow, 0);
            String DAEmail = (String) cbxDA.getSelectedItem();
            String Location = (String) tblOrdersList.getValueAt(SelectRow, 6);
            String sql1 = "SELECT * FROM deliveryagentorders WHERE Order_ID = ?";
            String sql = "INSERT INTO deliveryagentorders (Order_ID,DA_Email,Customer_Location) VALUES(?,?,?);";
            Connection DbConnection = mysqlConnection.getConnection();
            try {
                PreparedStatement pst = DbConnection.prepareStatement(sql1);
                pst.setInt(1, OrderID);
                ResultSet rs = pst.executeQuery();
                if(rs.next()){
                    JOptionPane.showMessageDialog(this, "Order Already Assigned");
                }
                else{
                    PreparedStatement pst1 = DbConnection.prepareStatement(sql);
                    pst1.setInt(1, OrderID);
                    pst1.setString(2, DAEmail);
                    pst1.setString(3, Location);
                    pst1.execute();
                    JOptionPane.showMessageDialog(this, "Order Assigned");
                }
            } catch (SQLException ex) {
                java.util.logging.Logger.getLogger(ViewOrders.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            }
            
            
            
        }
        else{
            JOptionPane.showMessageDialog(this, "Please Select a Row to Update");
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void cbxDAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxDAActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbxDAActionPerformed

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        try {
            // TODO add your handling code here:
            populateDA();
        } catch (SQLException ex) {
            java.util.logging.Logger.getLogger(ViewOrders.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnRefreshActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnFind;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnUpdateStatus;
    private javax.swing.JComboBox<String> cbxChangeStatus;
    private javax.swing.JComboBox<String> cbxDA;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblOrganization;
    private javax.swing.JTable tblOrdersList;
    // End of variables declaration//GEN-END:variables
    
    
    private void PopulateOrdersList() throws SQLException {
        DefaultTableModel ProductsTable = (DefaultTableModel) tblOrdersList.getModel();
        
        
            ResultSet rs1 = Order.GetOrderDetails(Organization);
            
            ResultSetMetaData metaData = (ResultSetMetaData) rs1.getMetaData();
            int columnCount = metaData.getColumnCount();
            ProductsTable.setRowCount(0);
        
            Object[] row = new Object[columnCount];
            while (rs1.next()){
                //Get object from column with specific index of result set to array of objects
                for (int i = 0; i < columnCount; i++){
                    row[i] = rs1.getObject(i+1);
                }
                //Now add row to table model with that array of objects as an argument
                ProductsTable.addRow(row);
            }
            
            
            }

    private void populateDA() throws SQLException {
        DefaultComboBoxModel DACbx = (DefaultComboBoxModel) cbxDA.getModel();
        DACbx.removeAllElements();
        String Role = "DeliveryAgent";
        ResultSet rs = DeliveryMan.GetAllDANames(Role);
        while(rs.next()){
            DACbx.addElement(rs.getString(1));
        }  
    }
    
    
    
        
    

}
